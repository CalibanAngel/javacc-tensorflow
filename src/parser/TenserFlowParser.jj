options{  static = true;}PARSER_BEGIN(TenserFlowParser)package parser;

public class TenserFlowParser{  public static void main(String args []) throws ParseException  {    TenserFlowParser parser = new TenserFlowParser(System.in);    while (true)    {      System.out.println("Reading from standard input...");      System.out.print("Enter an expression :");      try      {        parser.parse_set_variable();      }      catch (Exception e)      {        System.out.println("NOK.");        System.out.println(e.getMessage());        TenserFlowParser.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Oops.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(TenserFlowParser)SKIP :{  < (" " | "\t" | "\n" | "\r")+ >  {    System.err.println("Skipping");  }}
< DEFAULT > TOKEN :{  < FUNC_NAME: "graph" | "reshape" | "variable" | "conv" | "add" | "relu" | "max_pool" >| < PARAM: (< PARAM_ELEM > ("," < PARAM_ELEM >)*) >| < PARAM_ELEM: < VAR_NAME > | < NUMBER > | < ARRAY > >| < ARRAY: "[" ((< VAR_NAME > | < SIGNED_NUMBER >) ("," (< VAR_NAME > | < SIGNED_NUMBER >))*)? "]" >| < VAR_NAME: < WORD > (< DIGIT >)? >| < WORD: (< ALPHA >)+ >| < NUMBER: (< DIGIT >)+ >| < SIGNED_NUMBER: "-" < NUMBER > >| < ALPHA: [ "a"-"z", "A"-"Z" ] >| < DIGIT : [ "0"-"9" ] >| < END_LINE: ";" >}// graph 50171350(inputs)->(outputs)
void parse_init_func() :
{ Token t; }{
  < FUNC_NAME > < NUMBER > "(" < VAR_NAME > ")" "->" "(" < VAR_NAME > ")"   
}// input = reshape( inputs, [-1, 28, 28, 1] );void parse_set_variable() :{ Token t; }{  < VAR_NAME > "=" < FUNC_NAME > "(" (< PARAM >)? ")" < END_LINE >
}
